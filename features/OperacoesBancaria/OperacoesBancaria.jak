
import atm.BalanceInquiry;
import atm.Deposit;
import atm.Transaction;
import atm.Withdrawal;

/**
 * TODO description
 */
public class OperacoesBancaria {
	   // display the main menu and perform transactions
	   public void performTransactions()
	   {
	      // local variable to store transaction currently being processed
	      Transaction currentTransaction = null;

	      boolean userExited = false; // user has not chosen to exit

	      // loop while user has not chosen option to exit system
	      while ( !userExited )
	      {
	         // show main menu and get user selection
	         int mainMenuSelection = displayMainMenu();

	         // decide how to proceed based on user's menu selection
	         switch ( mainMenuSelection )
	         {
	            // user chose to perform one of three transaction types
	            case BALANCE_INQUIRY:
	            case WITHDRAWAL:
	            case DEPOSIT:

	               // initialize as new object of chosen type
	               currentTransaction =
	                  createTransaction( mainMenuSelection );

	               currentTransaction.execute(); // execute transaction
	               break;
	            case EXIT: // user chose to terminate session
	               screen.displayMessageLine( "\nExiting the system..." );
	               userExited = true; // this ATM session should end
	               break;
	            default: // user did not enter an integer from 1-4
	               screen.displayMessageLine(
	                  "\nYou did not enter a valid selection. Try again." );
	               break;
	         } // end switch
	      } // end while
	   } // end method performTransactions
	   // return object of specified Transaction subclass
	   private Transaction createTransaction( int type )
	   {
	      Transaction temp = null; // temporary Transaction variable

	      // determine which type of Transaction to create
	      switch ( type )
	      {
	         case BALANCE_INQUIRY: // create new BalanceInquiry transaction
	            temp = new BalanceInquiry(
	               currentAccountNumber, screen, bankDatabase );
	            break;
	         case WITHDRAWAL: // create new Withdrawal transaction
	            temp = new Withdrawal( currentAccountNumber, screen,
	               bankDatabase, keypad, cashDispenser );
	            break;
	         case DEPOSIT: // create new Deposit transaction
	            temp = new Deposit( currentAccountNumber, screen,
	               bankDatabase, keypad, depositSlot );
	            break;
	      } // end switch

	      return temp; // return the newly created object
	   } // end method createTransaction
	   
	   
}
